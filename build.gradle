plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '2.6.6'
    id 'io.qameta.allure' version '2.11.2'
}

def springBootVersion = '2.6.6'
def cucumberVersion = '7.8.1'
def selenideVersion = '6.10.1'
def restAssuredVersion = '5.3.0'
def allureVersion = '2.17.3'

group 'org.aft.dshokin'
version '1.0'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.projectlombok:lombok:1.18.24'

    //spring
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

    //selenide
    implementation group: 'com.codeborne', name: 'selenide', version: "${selenideVersion}"

    //cucumber
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: "${cucumberVersion}"
    testImplementation group: 'io.cucumber', name: 'cucumber-spring', version: "${cucumberVersion}"
    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: "${cucumberVersion}"
    testImplementation group: 'io.cucumber', name: 'cucumber-junit-platform-engine', version: "${cucumberVersion}"

    //restAssured
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: "${restAssuredVersion}"

    //allure
    implementation group: 'io.qameta.allure', name: 'allure-cucumber7-jvm', version: "${allureVersion}"

}

allure {
    autoconfigure = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()

    //junit
    systemProperties.put('cucumber.execution.parallel.enabled', "true")
    systemProperties.put('cucumber.execution.parallel.config.strategy', "fixed")
    systemProperties.put('cucumber.execution.parallel.config.fixed.parallelism', 2)

    //selenide
    systemProperties.put('selenide.pageLoadStrategy', "none")
    systemProperties.put('selenide.reportsFolder', "${reportsDir}/tests/${name}")
    systemProperties.put('selenide.downloadsFolder', "${buildDir}/tests/downloads")
}